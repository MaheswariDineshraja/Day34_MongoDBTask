db.zenusers.insertMany( [
      { "user_id": 1, "user_name": "large box", "user_email":"user1@yahoo.com","user_batchno":"B01ENG","problems_solved":[1]},
      { "user_id": 2, "user_name": "small box", "user_email":"user2@gmail.com","user_batchno":"B02TAM"},"problems_solved":[1,2]},
      { "user_id": 3, "user_name": "medium box", "user_email":"user3@yahoo.com","user_batchno":"B03ENG"},"problems_solved":[1,]},
	  { "user_id": 4, "user_name": "large box", "user_email":"user4@yahoo.com","user_batchno":"B04TAM"},"problems_solved":[1,2,3,4]},
      { "user_id": 5, "user_name": "small box", "user_email":"user5@gmail.com","user_batchno":"B05ENG"},"problems_solved":[1,2,3,4,5]},
    ] );
	
db.codekata.insertMany([
	{"codekata_id":1,"codekata_name":"Input/Output","description":"Write a code to get the input in the given format and print the output in the given format."},
	{"codekata_id":2,"codekata_name":"Absolute beginner","description":"Write a code to get an integer N and print the even values from 1 till N in a separate line."},
	{"codekata_id":3,"codekata_name":"Array","description":"A person saves his monthly saving according to given schema. He saves same amount of money which is equal to the money saved in immediate previous two months. Assume, initially he saved 1000 rupees and in first month he saved another 1000. Your task is to tell how much he had totally saved at the end of ‘n’ months"},
	{"codekata_id":4,"codekata_name":"Mathematics","description":"You are given with month and year calculate the no of working days of employee."},
	{"codekata_id":5,"codekata_name":"Strings","description":"Print the string from characters right to left."}
]);
	
db.attendance.insertMany( [
      { "Class_id":1,"date":new Date("2020-05-11"),"present": "60", "absent": "5"},
      { "Class_id":2,"date":new Date("2020-05-12"),"present": "50", "absent": "2"},
	  { "Class_id":3,"date":new Date("2020-05-13"),"present": "45", "absent": "0"},
	  { "Class_id":4,"date":new Date("2020-05-14"),"present": "50", "absent": "4"},
	  { "Class_id":5,"date":new Date("2020-05-15"),"present": "20", "absent": "10"},
    ] );
	
db.topics.insertMany([
{"topics_id":1,"name":"Javascript","description":"Javascript","date":new Date("2020-10-16")},
{"topics_id":2,"name":"HTML,CSS","description":"HTML,CSS","date":new Date("2020-10-15")},
{"topics_id":3,"name":"React","description":"ReactJS","date":new Date("2020-10-17")},
{"topics_id":4,"name":"MongoDB","description":"MongoDB","date":new Date("2020-10-18")},
{"topics_id":5,"name":"NodeJS","description":"NodeJS","date":new Date("2020-10-19")},
]);
	
db.tasks.insertMany([
{"task_id":1,"task_name":"Javascript Day1 ","description":"Introduction to Browser & web","date":new Date("2020-10-17"),"submitted":[1,3,4], "not_submitted": [2,5]},
{"task_id":2,"task_name":"HTML CSS","description":"Responsive web design","date":new Date("2020-10-18"),"submitted":[1,3,4], "not_submitted": [2,5]},
{"task_id":3,"task_name":"REACT ","description":"ES5 vs ES6","date":new Date("2020-10-19"),"submitted":[1,3,4], "not_submitted": [2,5]},
{"task_id":4,"task_name":"SQL","description":"Database - MySQL","date":new Date("2020-10-20"),"submitted":[1,3,4], "not_submitted": [2,5]},
{"task_id":5,"task_name":"MONGODB","description":"Database - MongoDB","date":new Date("2020-10-21"),"submitted":[1,3,4], "not_submitted": [2,5]}
]);

db.company_drives.insertMany([
{"company_id":1,"company_name":"CTS","interview_date":new Date("2020-10-10"),"student_id_list":[1,2,3]},
{"company_id":2,"company_name":"TCS","interview_date":new Date("2020-10-14"),"student_id_list":[4,5]},
{"company_id":3,"company_name":"WIPRO","interview_date":new Date("2020-10-17"),"student_id_list":[1]},
{"company_id":4,"company_name":"TATA","interview_date":new Date("2020-10-20"),"student_id_list":[2,3]},
{"company_id":5,"company_name":"ZOHO","interview_date":new Date("2020-10-29"),"student_id_list":[1,2,3,4,5]}
]);

db.mentors.insertMany([
{"mentor_id":1,"mentor_name":"ABCD","email_id":"m1@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,1,4,15,16]},
{"mentor_id":2,"mentor_name":"EFGH","email_id":"m2@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,1,4,15]},
{"mentor_id":3,"mentor_name":"IJKL","email_id":"m3@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,1,4,15]},
{"mentor_id":4,"mentor_name":"MNOP","email_id":"m4@gmail.com","student_id_list":[1,2,3,4,5]},
{"mentor_id":5,"mentor_name":"SANJ","email_id":"m5@gmail.com","student_id_list":[1,2,3,4,5,6,7,8,9,10,11,12,13,1,4,15]}
]);

Find all the topics and tasks which are thought in the month of October

db.topics.find({
"date":{
$gte: ISODate("2020-10-01"),
$lt:ISODate("2020-10-31")}
})


Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.company_drives.find({
"interview_date": {
$gte: ISODate("2020-10-15"),
$lt: ISODate("2020-10-31")
}
})

Find all the company drives and students who are appeared for the placement.

db.company_drives.find(
{
"company_id":0,
"company_name":1,
"student_id_list":1
})


Find the number of problems solved by the user in codekata

db.zenusers.aggregate({
$zenusers: {
user_id: 0,
user_name: 1,
number of psolved: {
$size: "$problems_solved"
}
}
})

Find all the mentors with who has the mentee's count more than 15

db.mentors.find({
$where: "this.student_id_list.length > 15"
},
{
mentor_id: 0,
mentor_name: 1
})

Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

db.attendance.aggregate({
$A: { 
"date": {
$gte: ISODate("2020-10-15"),
$lt: ISODate("2020-10-31")
} 
}
},{
$B: {
_id: 0,
date: 1,
no_of_absent: {$size: "$absent"}
}
})

db.tasks.aggregate({
 $A: {
 "date": {
 $gte: ISODate("2020-10-15"),
 $lt: ISODate("2020-10-31")
 }
 }
 },{
 $B: {
 task_id: 0,
 task_name:1,
 date: 1,
 no_of_not_submitted: {$size: "$not_submitted"}
 }
 })
